/* eslint-disable */
/**
 * Sobol API Docs
 * An OpenAPI Implementation exposing Sobol\'s RESTful API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@sobol.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface RoleAssignment
 */
export interface RoleAssignment {
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _id: string;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _type?: RoleAssignmentTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _rootId: string;
    /**
     * 
     * @type {Date}
     * @memberof RoleAssignment
     */
    _createdOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _createdBy: string;
    /**
     * 
     * @type {Date}
     * @memberof RoleAssignment
     */
    _updatedOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _updatedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof RoleAssignment
     */
    _archivedOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _archivedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof RoleAssignment
     */
    _deletedOn?: Date;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _deletedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    _operationId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RoleAssignment
     */
    _isPublic?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    templateId?: string;
    /**
     * 
     * @type {string}
     * @memberof RoleAssignment
     */
    status?: RoleAssignmentStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof RoleAssignment
     */
    userAllocationPercent?: number;
}

/**
* @export
* @enum {string}
*/
export enum RoleAssignmentTypeEnum {
    role_assignment = 'role_assignment'
}
/**
* @export
* @enum {string}
*/
export enum RoleAssignmentStatusEnum {
    draft = 'draft',
    active = 'active',
    archived = 'archived'
}


/**
 * Check if a given object implements the RoleAssignment interface.
 */
export function instanceOfRoleAssignment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "_id" in value;
    isInstance = isInstance && "_rootId" in value;
    isInstance = isInstance && "_createdBy" in value;

    return isInstance;
}

export function RoleAssignmentFromJSON(json: any): RoleAssignment {
    return RoleAssignmentFromJSONTyped(json, false);
}

export function RoleAssignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAssignment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_id': json['_id'],
        '_type': !exists(json, '_type') ? undefined : json['_type'],
        '_rootId': json['_rootId'],
        '_createdOn': !exists(json, '_createdOn') ? undefined : (new Date(json['_createdOn'])),
        '_createdBy': json['_createdBy'],
        '_updatedOn': !exists(json, '_updatedOn') ? undefined : (new Date(json['_updatedOn'])),
        '_updatedBy': !exists(json, '_updatedBy') ? undefined : json['_updatedBy'],
        '_archivedOn': !exists(json, '_archivedOn') ? undefined : (new Date(json['_archivedOn'])),
        '_archivedBy': !exists(json, '_archivedBy') ? undefined : json['_archivedBy'],
        '_deletedOn': !exists(json, '_deletedOn') ? undefined : (new Date(json['_deletedOn'])),
        '_deletedBy': !exists(json, '_deletedBy') ? undefined : json['_deletedBy'],
        '_operationId': !exists(json, '_operationId') ? undefined : json['_operationId'],
        '_isPublic': !exists(json, '_isPublic') ? undefined : json['_isPublic'],
        'templateId': !exists(json, 'templateId') ? undefined : json['templateId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'userAllocationPercent': !exists(json, 'userAllocationPercent') ? undefined : json['userAllocationPercent'],
    };
}

export function RoleAssignmentToJSON(value?: RoleAssignment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_id': value._id,
        '_type': value._type,
        '_rootId': value._rootId,
        '_createdOn': value._createdOn === undefined ? undefined : (value._createdOn.toISOString()),
        '_createdBy': value._createdBy,
        '_updatedOn': value._updatedOn === undefined ? undefined : (value._updatedOn.toISOString()),
        '_updatedBy': value._updatedBy,
        '_archivedOn': value._archivedOn === undefined ? undefined : (value._archivedOn.toISOString()),
        '_archivedBy': value._archivedBy,
        '_deletedOn': value._deletedOn === undefined ? undefined : (value._deletedOn.toISOString()),
        '_deletedBy': value._deletedBy,
        '_operationId': value._operationId,
        '_isPublic': value._isPublic,
        'templateId': value.templateId,
        'status': value.status,
        'userAllocationPercent': value.userAllocationPercent,
    };
}

