/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 *
 * @export
 * @interface ErrorModel
 */
export interface ErrorModel {
  /**
   * Error code displayed in case of a failure
   * @type {string}
   * @memberof ErrorModel
   */
  code: ErrorModelCodeEnum;
  /**
   * Readable message associated to the failure
   * @type {string}
   * @memberof ErrorModel
   */
  message: string;
}

/**
 * @export
 * @enum {string}
 */
export enum ErrorModelCodeEnum {
  InvalidParameter = 'invalid_parameter',
  MissingParameter = 'missing_parameter',
  OutOfRange = 'out_of_range',
  CampaignProcessing = 'campaign_processing',
  CampaignSent = 'campaign_sent',
  DocumentNotFound = 'document_not_found',
  ResellerPermissionDenied = 'reseller_permission_denied',
  NotEnoughCredits = 'not_enough_credits',
  PermissionDenied = 'permission_denied',
  DuplicateParameter = 'duplicate_parameter',
  DuplicateRequest = 'duplicate_request',
  MethodNotAllowed = 'method_not_allowed',
  Unauthorized = 'unauthorized',
  AccountUnderValidation = 'account_under_validation',
  NotAcceptable = 'not_acceptable',
}

/**
 * Check if a given object implements the ErrorModel interface.
 */
export function instanceOfErrorModel(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'code' in value;
  isInstance = isInstance && 'message' in value;

  return isInstance;
}

export function ErrorModelFromJSON(json: any): ErrorModel {
  return ErrorModelFromJSONTyped(json, false);
}

export function ErrorModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorModel {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    code: json['code'],
    message: json['message'],
  };
}

export function ErrorModelToJSON(value?: ErrorModel | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    code: value.code,
    message: value.message,
  };
}
