/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 *
 * @export
 * @interface UpdateWebhook
 */
export interface UpdateWebhook {
  /**
   * URL of the webhook
   * @type {string}
   * @memberof UpdateWebhook
   */
  url?: string;
  /**
   * Description of the webhook
   * @type {string}
   * @memberof UpdateWebhook
   */
  description?: string;
  /**
   * Events triggering the webhook. Possible values for Transactional type webhook – `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed` and possible values for Marketing type webhook – `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` and `delivered`
   * @type {Array<string>}
   * @memberof UpdateWebhook
   */
  events?: Array<UpdateWebhookEventsEnum>;
}

/**
 * @export
 * @enum {string}
 */
export enum UpdateWebhookEventsEnum {
  HardBounce = 'hardBounce',
  SoftBounce = 'softBounce',
  Blocked = 'blocked',
  Spam = 'spam',
  Delivered = 'delivered',
  Request = 'request',
  Click = 'click',
  Invalid = 'invalid',
  Deferred = 'deferred',
  Opened = 'opened',
  UniqueOpened = 'uniqueOpened',
  Unsubscribed = 'unsubscribed',
  ListAddition = 'listAddition',
  ContactUpdated = 'contactUpdated',
  ContactDeleted = 'contactDeleted',
}

/**
 * Check if a given object implements the UpdateWebhook interface.
 */
export function instanceOfUpdateWebhook(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UpdateWebhookFromJSON(json: any): UpdateWebhook {
  return UpdateWebhookFromJSONTyped(json, false);
}

export function UpdateWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateWebhook {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    url: !exists(json, 'url') ? undefined : json['url'],
    description: !exists(json, 'description') ? undefined : json['description'],
    events: !exists(json, 'events') ? undefined : json['events'],
  };
}

export function UpdateWebhookToJSON(value?: UpdateWebhook | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    url: value.url,
    description: value.description,
    events: value.events,
  };
}
