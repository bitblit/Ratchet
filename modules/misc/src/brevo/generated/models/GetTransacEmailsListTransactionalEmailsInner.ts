/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GetTransacEmailsListTransactionalEmailsInner
 */
export interface GetTransacEmailsListTransactionalEmailsInner {
    /**
     * Email address to which transactional email has been sent
     * @type {string}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    email: string;
    /**
     * Subject of the sent email
     * @type {string}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    subject: string;
    /**
     * Id of the template
     * @type {number}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    templateId?: number;
    /**
     * Message Id of the sent email
     * @type {string}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    messageId: string;
    /**
     * Unique id of the email sent to a particular contact
     * @type {string}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    uuid: string;
    /**
     * Date on which transactional email was sent
     * @type {Date}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    date: Date;
    /**
     * Email address of the sender from which the email was sent
     * @type {string}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    from?: string;
    /**
     * Tags used for your email
     * @type {Array<string>}
     * @memberof GetTransacEmailsListTransactionalEmailsInner
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the GetTransacEmailsListTransactionalEmailsInner interface.
 */
export function instanceOfGetTransacEmailsListTransactionalEmailsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "subject" in value;
    isInstance = isInstance && "messageId" in value;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "date" in value;

    return isInstance;
}

export function GetTransacEmailsListTransactionalEmailsInnerFromJSON(json: any): GetTransacEmailsListTransactionalEmailsInner {
    return GetTransacEmailsListTransactionalEmailsInnerFromJSONTyped(json, false);
}

export function GetTransacEmailsListTransactionalEmailsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTransacEmailsListTransactionalEmailsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'subject': json['subject'],
        'templateId': !exists(json, 'templateId') ? undefined : json['templateId'],
        'messageId': json['messageId'],
        'uuid': json['uuid'],
        'date': (new Date(json['date'])),
        'from': !exists(json, 'from') ? undefined : json['from'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function GetTransacEmailsListTransactionalEmailsInnerToJSON(value?: GetTransacEmailsListTransactionalEmailsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'subject': value.subject,
        'templateId': value.templateId,
        'messageId': value.messageId,
        'uuid': value.uuid,
        'date': (value.date.toISOString()),
        'from': value.from,
        'tags': value.tags,
    };
}

