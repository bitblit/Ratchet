/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { GetDeviceBrowserStats } from './GetDeviceBrowserStats.js';
import {
    GetDeviceBrowserStatsFromJSON,
    GetDeviceBrowserStatsFromJSONTyped,
    GetDeviceBrowserStatsToJSON,
} from './GetDeviceBrowserStats.js';

/**
 * 
 * @export
 * @interface GetStatsByDevice
 */
export interface GetStatsByDevice {
    /**
     * Statistics of the campaign on the basis of desktop devices
     * @type {{ [key: string]: GetDeviceBrowserStats; }}
     * @memberof GetStatsByDevice
     */
    desktop?: { [key: string]: GetDeviceBrowserStats; };
    /**
     * Statistics of the campaign on the basis of mobile devices
     * @type {{ [key: string]: GetDeviceBrowserStats; }}
     * @memberof GetStatsByDevice
     */
    mobile?: { [key: string]: GetDeviceBrowserStats; };
    /**
     * Statistics of the campaign on the basis of tablet devices
     * @type {{ [key: string]: GetDeviceBrowserStats; }}
     * @memberof GetStatsByDevice
     */
    tablet?: { [key: string]: GetDeviceBrowserStats; };
    /**
     * Statistics of the campaign on the basis of unknown devices
     * @type {{ [key: string]: GetDeviceBrowserStats; }}
     * @memberof GetStatsByDevice
     */
    unknown?: { [key: string]: GetDeviceBrowserStats; };
}

/**
 * Check if a given object implements the GetStatsByDevice interface.
 */
export function instanceOfGetStatsByDevice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetStatsByDeviceFromJSON(json: any): GetStatsByDevice {
    return GetStatsByDeviceFromJSONTyped(json, false);
}

export function GetStatsByDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStatsByDevice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'desktop': !exists(json, 'desktop') ? undefined : (mapValues(json['desktop'], GetDeviceBrowserStatsFromJSON)),
        'mobile': !exists(json, 'mobile') ? undefined : (mapValues(json['mobile'], GetDeviceBrowserStatsFromJSON)),
        'tablet': !exists(json, 'tablet') ? undefined : (mapValues(json['tablet'], GetDeviceBrowserStatsFromJSON)),
        'unknown': !exists(json, 'unknown') ? undefined : (mapValues(json['unknown'], GetDeviceBrowserStatsFromJSON)),
    };
}

export function GetStatsByDeviceToJSON(value?: GetStatsByDevice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'desktop': value.desktop === undefined ? undefined : (mapValues(value.desktop, GetDeviceBrowserStatsToJSON)),
        'mobile': value.mobile === undefined ? undefined : (mapValues(value.mobile, GetDeviceBrowserStatsToJSON)),
        'tablet': value.tablet === undefined ? undefined : (mapValues(value.tablet, GetDeviceBrowserStatsToJSON)),
        'unknown': value.unknown === undefined ? undefined : (mapValues(value.unknown, GetDeviceBrowserStatsToJSON)),
    };
}

