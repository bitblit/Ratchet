/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetSmsCampaignStats
 */
export interface GetSmsCampaignStats {
  /**
   * Number of delivered SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  delivered: number;
  /**
   * Number of sent SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  sent: number;
  /**
   * Number of processing SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  processing: number;
  /**
   * Number of softbounced SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  softBounces: number;
  /**
   * Number of hardbounced SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  hardBounces: number;
  /**
   * Number of unsubscription SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  unsubscriptions: number;
  /**
   * Number of replies to the SMS
   * @type {number}
   * @memberof GetSmsCampaignStats
   */
  answered: number;
}

/**
 * Check if a given object implements the GetSmsCampaignStats interface.
 */
export function instanceOfGetSmsCampaignStats(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'delivered' in value;
  isInstance = isInstance && 'sent' in value;
  isInstance = isInstance && 'processing' in value;
  isInstance = isInstance && 'softBounces' in value;
  isInstance = isInstance && 'hardBounces' in value;
  isInstance = isInstance && 'unsubscriptions' in value;
  isInstance = isInstance && 'answered' in value;

  return isInstance;
}

export function GetSmsCampaignStatsFromJSON(json: any): GetSmsCampaignStats {
  return GetSmsCampaignStatsFromJSONTyped(json, false);
}

export function GetSmsCampaignStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSmsCampaignStats {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    delivered: json['delivered'],
    sent: json['sent'],
    processing: json['processing'],
    softBounces: json['softBounces'],
    hardBounces: json['hardBounces'],
    unsubscriptions: json['unsubscriptions'],
    answered: json['answered'],
  };
}

export function GetSmsCampaignStatsToJSON(value?: GetSmsCampaignStats | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    delivered: value.delivered,
    sent: value.sent,
    processing: value.processing,
    softBounces: value.softBounces,
    hardBounces: value.hardBounces,
    unsubscriptions: value.unsubscriptions,
    answered: value.answered,
  };
}
