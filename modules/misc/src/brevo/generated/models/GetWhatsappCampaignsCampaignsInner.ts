/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { WhatsappCampStats } from './WhatsappCampStats.js';
import { WhatsappCampStatsFromJSON, WhatsappCampStatsFromJSONTyped, WhatsappCampStatsToJSON } from './WhatsappCampStats.js';

/**
 *
 * @export
 * @interface GetWhatsappCampaignsCampaignsInner
 */
export interface GetWhatsappCampaignsCampaignsInner {
  /**
   * ID of the WhatsApp Campaign
   * @type {number}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  id: number;
  /**
   * Name of the WhatsApp Campaign
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  campaignName: string;
  /**
   * Id of the WhatsApp template
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  templateId: string;
  /**
   * Status of the WhatsApp Campaign
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  campaignStatus: GetWhatsappCampaignsCampaignsInnerCampaignStatusEnum;
  /**
   * UTC date-time on which WhatsApp campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  scheduledAt: string;
  /**
   * Error reason in the campaign creation
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  errorReason?: string;
  /**
   * Count of invalidated contacts
   * @type {number}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  invalidatedContacts?: number;
  /**
   * Read percentage of the the WhatsApp campaign created
   * @type {number}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  readPercentage?: number;
  /**
   *
   * @type {WhatsappCampStats}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  stats?: WhatsappCampStats;
  /**
   * Creation UTC date-time of the WhatsApp campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  createdAt: string;
  /**
   * UTC date-time of last modification of the whatsApp template (YYYY-MM-DDTHH:mm:ss.SSSZ)
   * @type {string}
   * @memberof GetWhatsappCampaignsCampaignsInner
   */
  modifiedAt: string;
}

/**
 * @export
 * @enum {string}
 */
export enum GetWhatsappCampaignsCampaignsInnerCampaignStatusEnum {
  Draft = 'draft',
  Scheduled = 'scheduled',
  Pending = 'pending',
  Approved = 'approved',
  Running = 'running',
  Suspended = 'suspended',
  Rejected = 'rejected',
  Sent = 'sent',
}

/**
 * Check if a given object implements the GetWhatsappCampaignsCampaignsInner interface.
 */
export function instanceOfGetWhatsappCampaignsCampaignsInner(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'campaignName' in value;
  isInstance = isInstance && 'templateId' in value;
  isInstance = isInstance && 'campaignStatus' in value;
  isInstance = isInstance && 'scheduledAt' in value;
  isInstance = isInstance && 'createdAt' in value;
  isInstance = isInstance && 'modifiedAt' in value;

  return isInstance;
}

export function GetWhatsappCampaignsCampaignsInnerFromJSON(json: any): GetWhatsappCampaignsCampaignsInner {
  return GetWhatsappCampaignsCampaignsInnerFromJSONTyped(json, false);
}

export function GetWhatsappCampaignsCampaignsInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetWhatsappCampaignsCampaignsInner {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    campaignName: json['campaignName'],
    templateId: json['templateId'],
    campaignStatus: json['campaignStatus'],
    scheduledAt: json['scheduledAt'],
    errorReason: !exists(json, 'errorReason') ? undefined : json['errorReason'],
    invalidatedContacts: !exists(json, 'invalidatedContacts') ? undefined : json['invalidatedContacts'],
    readPercentage: !exists(json, 'readPercentage') ? undefined : json['readPercentage'],
    stats: !exists(json, 'stats') ? undefined : WhatsappCampStatsFromJSON(json['stats']),
    createdAt: json['createdAt'],
    modifiedAt: json['modifiedAt'],
  };
}

export function GetWhatsappCampaignsCampaignsInnerToJSON(value?: GetWhatsappCampaignsCampaignsInner | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    campaignName: value.campaignName,
    templateId: value.templateId,
    campaignStatus: value.campaignStatus,
    scheduledAt: value.scheduledAt,
    errorReason: value.errorReason,
    invalidatedContacts: value.invalidatedContacts,
    readPercentage: value.readPercentage,
    stats: WhatsappCampStatsToJSON(value.stats),
    createdAt: value.createdAt,
    modifiedAt: value.modifiedAt,
  };
}
