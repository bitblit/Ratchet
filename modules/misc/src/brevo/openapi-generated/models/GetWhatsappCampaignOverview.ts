/* tslint:disable */
/* eslint-disable */
/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  | 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { WhatsappCampStats } from './WhatsappCampStats.js';
import {
    WhatsappCampStatsFromJSON,
    WhatsappCampStatsFromJSONTyped,
    WhatsappCampStatsToJSON,
} from './WhatsappCampStats.js';
import type { WhatsappCampTemplate } from './WhatsappCampTemplate.js';
import {
    WhatsappCampTemplateFromJSON,
    WhatsappCampTemplateFromJSONTyped,
    WhatsappCampTemplateToJSON,
} from './WhatsappCampTemplate.js';

/**
 * 
 * @export
 * @interface GetWhatsappCampaignOverview
 */
export interface GetWhatsappCampaignOverview {
    /**
     * ID of the WhatsApp Campaign
     * @type {number}
     * @memberof GetWhatsappCampaignOverview
     */
    id: number;
    /**
     * Name of the WhatsApp Campaign
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    campaignName: string;
    /**
     * Status of the WhatsApp Campaign
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    campaignStatus: GetWhatsappCampaignOverviewCampaignStatusEnum;
    /**
     * UTC date-time on which WhatsApp campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    scheduledAt?: string;
    /**
     * Sender of the WhatsApp Campaign
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    senderNumber: string;
    /**
     * 
     * @type {WhatsappCampStats}
     * @memberof GetWhatsappCampaignOverview
     */
    stats?: WhatsappCampStats;
    /**
     * 
     * @type {WhatsappCampTemplate}
     * @memberof GetWhatsappCampaignOverview
     */
    template: WhatsappCampTemplate;
    /**
     * Creation UTC date-time of the WhatsApp campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    createdAt: string;
    /**
     * UTC date-time of last modification of the WhatsApp campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)
     * @type {string}
     * @memberof GetWhatsappCampaignOverview
     */
    modifiedAt: string;
}

/**
* @export
* @enum {string}
*/
export enum GetWhatsappCampaignOverviewCampaignStatusEnum {
    Draft = 'draft',
    Scheduled = 'scheduled',
    Pending = 'pending',
    Approved = 'approved',
    Running = 'running',
    Suspended = 'suspended',
    Rejected = 'rejected',
    Sent = 'sent'
}


/**
 * Check if a given object implements the GetWhatsappCampaignOverview interface.
 */
export function instanceOfGetWhatsappCampaignOverview(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "campaignName" in value;
    isInstance = isInstance && "campaignStatus" in value;
    isInstance = isInstance && "senderNumber" in value;
    isInstance = isInstance && "template" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "modifiedAt" in value;

    return isInstance;
}

export function GetWhatsappCampaignOverviewFromJSON(json: any): GetWhatsappCampaignOverview {
    return GetWhatsappCampaignOverviewFromJSONTyped(json, false);
}

export function GetWhatsappCampaignOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetWhatsappCampaignOverview {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'campaignName': json['campaignName'],
        'campaignStatus': json['campaignStatus'],
        'scheduledAt': !exists(json, 'scheduledAt') ? undefined : json['scheduledAt'],
        'senderNumber': json['senderNumber'],
        'stats': !exists(json, 'stats') ? undefined : WhatsappCampStatsFromJSON(json['stats']),
        'template': WhatsappCampTemplateFromJSON(json['template']),
        'createdAt': json['createdAt'],
        'modifiedAt': json['modifiedAt'],
    };
}

export function GetWhatsappCampaignOverviewToJSON(value?: GetWhatsappCampaignOverview | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'campaignName': value.campaignName,
        'campaignStatus': value.campaignStatus,
        'scheduledAt': value.scheduledAt,
        'senderNumber': value.senderNumber,
        'stats': WhatsappCampStatsToJSON(value.stats),
        'template': WhatsappCampTemplateToJSON(value.template),
        'createdAt': value.createdAt,
        'modifiedAt': value.modifiedAt,
    };
}

